export declare function testWithReferenceFuncAsync<P0, R>(referenceFunc: (p0: P0) => Promise<R>, testFunc: (p0: P0) => Promise<R>, values: [P0]): Promise<void>;
export declare function testWithReferenceFuncAsync<P0, P1, R>(referenceFunc: (p0: P0, p1: P1) => Promise<R>, testFunc: (p0: P0, p1: P1) => Promise<R>, values: [P0, P1]): Promise<void>;
export declare function testWithReferenceFuncAsync<P0, P1, P2, R>(referenceFunc: (p0: P0, p1: P1, p2: P2) => Promise<R>, testFunc: (p0: P0, p1: P1, p2: P2) => Promise<R>, values: [P0, P1, P2]): Promise<void>;
export declare function testWithReferenceFuncAsync<P0, P1, P2, P3, R>(referenceFunc: (p0: P0, p1: P1, p2: P2, p3: P3) => Promise<R>, testFunc: (p0: P0, p1: P1, p2: P2, p3: P3) => Promise<R>, values: [P0, P1, P2, P3]): Promise<void>;
export declare function testWithReferenceFuncAsync<P0, P1, P2, P3, P4, R>(referenceFunc: (p0: P0, p1: P1, p2: P2, p3: P3, p4: P4) => Promise<R>, testFunc: (p0: P0, p1: P1, p2: P2, p3: P3, p4: P4) => Promise<R>, values: [P0, P1, P2, P3, P4]): Promise<void>;
//# sourceMappingURL=test_with_reference.d.ts.map