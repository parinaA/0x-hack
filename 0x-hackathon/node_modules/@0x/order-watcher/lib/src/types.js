"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var OrderWatcherError;
(function (OrderWatcherError) {
    OrderWatcherError["SubscriptionAlreadyPresent"] = "SUBSCRIPTION_ALREADY_PRESENT";
    OrderWatcherError["SubscriptionNotFound"] = "SUBSCRIPTION_NOT_FOUND";
})(OrderWatcherError = exports.OrderWatcherError || (exports.OrderWatcherError = {}));
var InternalOrderWatcherError;
(function (InternalOrderWatcherError) {
    InternalOrderWatcherError["NoAbiDecoder"] = "NO_ABI_DECODER";
    InternalOrderWatcherError["ZrxNotInTokenRegistry"] = "ZRX_NOT_IN_TOKEN_REGISTRY";
    InternalOrderWatcherError["WethNotInTokenRegistry"] = "WETH_NOT_IN_TOKEN_REGISTRY";
})(InternalOrderWatcherError = exports.InternalOrderWatcherError || (exports.InternalOrderWatcherError = {}));
var OrderWatcherMethod;
(function (OrderWatcherMethod) {
    // Methods initiated by the user.
    OrderWatcherMethod["GetStats"] = "GET_STATS";
    OrderWatcherMethod["AddOrder"] = "ADD_ORDER";
    OrderWatcherMethod["RemoveOrder"] = "REMOVE_ORDER";
    // These are spontaneous; they are primarily orderstate changes.
    OrderWatcherMethod["Update"] = "UPDATE";
    // `subscribe` and `unsubscribe` are methods of OrderWatcher, but we don't
    // need to expose them to the WebSocket server user because the user implicitly
    // subscribes and unsubscribes by connecting and disconnecting from the server.
})(OrderWatcherMethod = exports.OrderWatcherMethod || (exports.OrderWatcherMethod = {}));
//# sourceMappingURL=types.js.map