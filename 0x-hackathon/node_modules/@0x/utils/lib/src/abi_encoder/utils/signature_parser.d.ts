import { DataItem } from 'ethereum-types';
/**
 * Returns an array of DataItem's corresponding to the input signature.
 * A signature can be in two forms: '<DataItem.type>' or '(<DataItem1.type>, <DataItem2.type>, ...)
 * An example of the first form would be 'address' or 'uint256'
 * An example of the second form would be '(address, uint256)'
 * Signatures can also include a name field, for example: 'foo address' or '(foo address, bar uint256)'
 * @param signature of input DataItems
 * @return DataItems derived from input signature
 */
export declare function generateDataItemsFromSignature(signature: string): DataItem[];
//# sourceMappingURL=signature_parser.d.ts.map